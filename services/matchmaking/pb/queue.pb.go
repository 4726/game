// Code generated by protoc-gen-go. DO NOT EDIT.
// source: queue.proto

package pb

import (
	context "context"
	fmt "fmt"
	math "math"

	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type QueueType int32

const (
	QueueType_UNRANKED QueueType = 0
	QueueType_RANKED   QueueType = 1
)

var QueueType_name = map[int32]string{
	0: "UNRANKED",
	1: "RANKED",
}

var QueueType_value = map[string]int32{
	"UNRANKED": 0,
	"RANKED":   1,
}

func (x QueueType) String() string {
	return proto.EnumName(QueueType_name, int32(x))
}

func (QueueType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_96e4d7d76a734cd8, []int{0}
}

type JoinQueueRequest struct {
	UserId               uint64    `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	QueueType            QueueType `protobuf:"varint,2,opt,name=queue_type,json=queueType,proto3,enum=pb.QueueType" json:"queue_type,omitempty"`
	Rating               uint64    `protobuf:"varint,3,opt,name=rating,proto3" json:"rating,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *JoinQueueRequest) Reset()         { *m = JoinQueueRequest{} }
func (m *JoinQueueRequest) String() string { return proto.CompactTextString(m) }
func (*JoinQueueRequest) ProtoMessage()    {}
func (*JoinQueueRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_96e4d7d76a734cd8, []int{0}
}

func (m *JoinQueueRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JoinQueueRequest.Unmarshal(m, b)
}
func (m *JoinQueueRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JoinQueueRequest.Marshal(b, m, deterministic)
}
func (m *JoinQueueRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JoinQueueRequest.Merge(m, src)
}
func (m *JoinQueueRequest) XXX_Size() int {
	return xxx_messageInfo_JoinQueueRequest.Size(m)
}
func (m *JoinQueueRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_JoinQueueRequest.DiscardUnknown(m)
}

var xxx_messageInfo_JoinQueueRequest proto.InternalMessageInfo

func (m *JoinQueueRequest) GetUserId() uint64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *JoinQueueRequest) GetQueueType() QueueType {
	if m != nil {
		return m.QueueType
	}
	return QueueType_UNRANKED
}

func (m *JoinQueueRequest) GetRating() uint64 {
	if m != nil {
		return m.Rating
	}
	return 0
}

type JoinQueueResponse struct {
	UserId               uint64    `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	QueueType            QueueType `protobuf:"varint,2,opt,name=queue_type,json=queueType,proto3,enum=pb.QueueType" json:"queue_type,omitempty"`
	MatchId              uint64    `protobuf:"varint,3,opt,name=match_id,json=matchId,proto3" json:"match_id,omitempty"`
	Found                bool      `protobuf:"varint,4,opt,name=found,proto3" json:"found,omitempty"`
	SecondsToAccept      uint32    `protobuf:"varint,5,opt,name=seconds_to_accept,json=secondsToAccept,proto3" json:"seconds_to_accept,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *JoinQueueResponse) Reset()         { *m = JoinQueueResponse{} }
func (m *JoinQueueResponse) String() string { return proto.CompactTextString(m) }
func (*JoinQueueResponse) ProtoMessage()    {}
func (*JoinQueueResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_96e4d7d76a734cd8, []int{1}
}

func (m *JoinQueueResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JoinQueueResponse.Unmarshal(m, b)
}
func (m *JoinQueueResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JoinQueueResponse.Marshal(b, m, deterministic)
}
func (m *JoinQueueResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JoinQueueResponse.Merge(m, src)
}
func (m *JoinQueueResponse) XXX_Size() int {
	return xxx_messageInfo_JoinQueueResponse.Size(m)
}
func (m *JoinQueueResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_JoinQueueResponse.DiscardUnknown(m)
}

var xxx_messageInfo_JoinQueueResponse proto.InternalMessageInfo

func (m *JoinQueueResponse) GetUserId() uint64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *JoinQueueResponse) GetQueueType() QueueType {
	if m != nil {
		return m.QueueType
	}
	return QueueType_UNRANKED
}

func (m *JoinQueueResponse) GetMatchId() uint64 {
	if m != nil {
		return m.MatchId
	}
	return 0
}

func (m *JoinQueueResponse) GetFound() bool {
	if m != nil {
		return m.Found
	}
	return false
}

func (m *JoinQueueResponse) GetSecondsToAccept() uint32 {
	if m != nil {
		return m.SecondsToAccept
	}
	return 0
}

type LeaveQueueRequest struct {
	UserId               uint64    `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	QueueType            QueueType `protobuf:"varint,2,opt,name=queue_type,json=queueType,proto3,enum=pb.QueueType" json:"queue_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *LeaveQueueRequest) Reset()         { *m = LeaveQueueRequest{} }
func (m *LeaveQueueRequest) String() string { return proto.CompactTextString(m) }
func (*LeaveQueueRequest) ProtoMessage()    {}
func (*LeaveQueueRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_96e4d7d76a734cd8, []int{2}
}

func (m *LeaveQueueRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LeaveQueueRequest.Unmarshal(m, b)
}
func (m *LeaveQueueRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LeaveQueueRequest.Marshal(b, m, deterministic)
}
func (m *LeaveQueueRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LeaveQueueRequest.Merge(m, src)
}
func (m *LeaveQueueRequest) XXX_Size() int {
	return xxx_messageInfo_LeaveQueueRequest.Size(m)
}
func (m *LeaveQueueRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_LeaveQueueRequest.DiscardUnknown(m)
}

var xxx_messageInfo_LeaveQueueRequest proto.InternalMessageInfo

func (m *LeaveQueueRequest) GetUserId() uint64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *LeaveQueueRequest) GetQueueType() QueueType {
	if m != nil {
		return m.QueueType
	}
	return QueueType_UNRANKED
}

type LeaveQueueResponse struct {
	UserId               uint64    `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	QueueType            QueueType `protobuf:"varint,2,opt,name=queue_type,json=queueType,proto3,enum=pb.QueueType" json:"queue_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *LeaveQueueResponse) Reset()         { *m = LeaveQueueResponse{} }
func (m *LeaveQueueResponse) String() string { return proto.CompactTextString(m) }
func (*LeaveQueueResponse) ProtoMessage()    {}
func (*LeaveQueueResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_96e4d7d76a734cd8, []int{3}
}

func (m *LeaveQueueResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LeaveQueueResponse.Unmarshal(m, b)
}
func (m *LeaveQueueResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LeaveQueueResponse.Marshal(b, m, deterministic)
}
func (m *LeaveQueueResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LeaveQueueResponse.Merge(m, src)
}
func (m *LeaveQueueResponse) XXX_Size() int {
	return xxx_messageInfo_LeaveQueueResponse.Size(m)
}
func (m *LeaveQueueResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_LeaveQueueResponse.DiscardUnknown(m)
}

var xxx_messageInfo_LeaveQueueResponse proto.InternalMessageInfo

func (m *LeaveQueueResponse) GetUserId() uint64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *LeaveQueueResponse) GetQueueType() QueueType {
	if m != nil {
		return m.QueueType
	}
	return QueueType_UNRANKED
}

type AcceptQueueRequest struct {
	UserId               uint64    `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	QueueType            QueueType `protobuf:"varint,2,opt,name=queue_type,json=queueType,proto3,enum=pb.QueueType" json:"queue_type,omitempty"`
	MatchId              uint64    `protobuf:"varint,3,opt,name=match_id,json=matchId,proto3" json:"match_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *AcceptQueueRequest) Reset()         { *m = AcceptQueueRequest{} }
func (m *AcceptQueueRequest) String() string { return proto.CompactTextString(m) }
func (*AcceptQueueRequest) ProtoMessage()    {}
func (*AcceptQueueRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_96e4d7d76a734cd8, []int{4}
}

func (m *AcceptQueueRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AcceptQueueRequest.Unmarshal(m, b)
}
func (m *AcceptQueueRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AcceptQueueRequest.Marshal(b, m, deterministic)
}
func (m *AcceptQueueRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AcceptQueueRequest.Merge(m, src)
}
func (m *AcceptQueueRequest) XXX_Size() int {
	return xxx_messageInfo_AcceptQueueRequest.Size(m)
}
func (m *AcceptQueueRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AcceptQueueRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AcceptQueueRequest proto.InternalMessageInfo

func (m *AcceptQueueRequest) GetUserId() uint64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *AcceptQueueRequest) GetQueueType() QueueType {
	if m != nil {
		return m.QueueType
	}
	return QueueType_UNRANKED
}

func (m *AcceptQueueRequest) GetMatchId() uint64 {
	if m != nil {
		return m.MatchId
	}
	return 0
}

type AcceptQueueResponse struct {
	TotalAccepted        uint32    `protobuf:"varint,1,opt,name=total_accepted,json=totalAccepted,proto3" json:"total_accepted,omitempty"`
	TotalNeeded          uint32    `protobuf:"varint,2,opt,name=total_needed,json=totalNeeded,proto3" json:"total_needed,omitempty"`
	QueueType            QueueType `protobuf:"varint,3,opt,name=queue_type,json=queueType,proto3,enum=pb.QueueType" json:"queue_type,omitempty"`
	Cancelled            bool      `protobuf:"varint,4,opt,name=cancelled,proto3" json:"cancelled,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *AcceptQueueResponse) Reset()         { *m = AcceptQueueResponse{} }
func (m *AcceptQueueResponse) String() string { return proto.CompactTextString(m) }
func (*AcceptQueueResponse) ProtoMessage()    {}
func (*AcceptQueueResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_96e4d7d76a734cd8, []int{5}
}

func (m *AcceptQueueResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AcceptQueueResponse.Unmarshal(m, b)
}
func (m *AcceptQueueResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AcceptQueueResponse.Marshal(b, m, deterministic)
}
func (m *AcceptQueueResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AcceptQueueResponse.Merge(m, src)
}
func (m *AcceptQueueResponse) XXX_Size() int {
	return xxx_messageInfo_AcceptQueueResponse.Size(m)
}
func (m *AcceptQueueResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AcceptQueueResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AcceptQueueResponse proto.InternalMessageInfo

func (m *AcceptQueueResponse) GetTotalAccepted() uint32 {
	if m != nil {
		return m.TotalAccepted
	}
	return 0
}

func (m *AcceptQueueResponse) GetTotalNeeded() uint32 {
	if m != nil {
		return m.TotalNeeded
	}
	return 0
}

func (m *AcceptQueueResponse) GetQueueType() QueueType {
	if m != nil {
		return m.QueueType
	}
	return QueueType_UNRANKED
}

func (m *AcceptQueueResponse) GetCancelled() bool {
	if m != nil {
		return m.Cancelled
	}
	return false
}

type DeclineQueueRequest struct {
	UserId               uint64    `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	QueueType            QueueType `protobuf:"varint,2,opt,name=queue_type,json=queueType,proto3,enum=pb.QueueType" json:"queue_type,omitempty"`
	MatchId              uint64    `protobuf:"varint,3,opt,name=match_id,json=matchId,proto3" json:"match_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *DeclineQueueRequest) Reset()         { *m = DeclineQueueRequest{} }
func (m *DeclineQueueRequest) String() string { return proto.CompactTextString(m) }
func (*DeclineQueueRequest) ProtoMessage()    {}
func (*DeclineQueueRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_96e4d7d76a734cd8, []int{6}
}

func (m *DeclineQueueRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeclineQueueRequest.Unmarshal(m, b)
}
func (m *DeclineQueueRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeclineQueueRequest.Marshal(b, m, deterministic)
}
func (m *DeclineQueueRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeclineQueueRequest.Merge(m, src)
}
func (m *DeclineQueueRequest) XXX_Size() int {
	return xxx_messageInfo_DeclineQueueRequest.Size(m)
}
func (m *DeclineQueueRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeclineQueueRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeclineQueueRequest proto.InternalMessageInfo

func (m *DeclineQueueRequest) GetUserId() uint64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *DeclineQueueRequest) GetQueueType() QueueType {
	if m != nil {
		return m.QueueType
	}
	return QueueType_UNRANKED
}

func (m *DeclineQueueRequest) GetMatchId() uint64 {
	if m != nil {
		return m.MatchId
	}
	return 0
}

type DeclineQueueResponse struct {
	UserId               uint64    `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	QueueType            QueueType `protobuf:"varint,2,opt,name=queue_type,json=queueType,proto3,enum=pb.QueueType" json:"queue_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *DeclineQueueResponse) Reset()         { *m = DeclineQueueResponse{} }
func (m *DeclineQueueResponse) String() string { return proto.CompactTextString(m) }
func (*DeclineQueueResponse) ProtoMessage()    {}
func (*DeclineQueueResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_96e4d7d76a734cd8, []int{7}
}

func (m *DeclineQueueResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeclineQueueResponse.Unmarshal(m, b)
}
func (m *DeclineQueueResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeclineQueueResponse.Marshal(b, m, deterministic)
}
func (m *DeclineQueueResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeclineQueueResponse.Merge(m, src)
}
func (m *DeclineQueueResponse) XXX_Size() int {
	return xxx_messageInfo_DeclineQueueResponse.Size(m)
}
func (m *DeclineQueueResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeclineQueueResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeclineQueueResponse proto.InternalMessageInfo

func (m *DeclineQueueResponse) GetUserId() uint64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *DeclineQueueResponse) GetQueueType() QueueType {
	if m != nil {
		return m.QueueType
	}
	return QueueType_UNRANKED
}

type QueueInfoRequest struct {
	UserId               uint64    `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	QueueType            QueueType `protobuf:"varint,2,opt,name=queue_type,json=queueType,proto3,enum=pb.QueueType" json:"queue_type,omitempty"`
	Rating               uint64    `protobuf:"varint,3,opt,name=rating,proto3" json:"rating,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *QueueInfoRequest) Reset()         { *m = QueueInfoRequest{} }
func (m *QueueInfoRequest) String() string { return proto.CompactTextString(m) }
func (*QueueInfoRequest) ProtoMessage()    {}
func (*QueueInfoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_96e4d7d76a734cd8, []int{8}
}

func (m *QueueInfoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueueInfoRequest.Unmarshal(m, b)
}
func (m *QueueInfoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueueInfoRequest.Marshal(b, m, deterministic)
}
func (m *QueueInfoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueueInfoRequest.Merge(m, src)
}
func (m *QueueInfoRequest) XXX_Size() int {
	return xxx_messageInfo_QueueInfoRequest.Size(m)
}
func (m *QueueInfoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QueueInfoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_QueueInfoRequest proto.InternalMessageInfo

func (m *QueueInfoRequest) GetUserId() uint64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *QueueInfoRequest) GetQueueType() QueueType {
	if m != nil {
		return m.QueueType
	}
	return QueueType_UNRANKED
}

func (m *QueueInfoRequest) GetRating() uint64 {
	if m != nil {
		return m.Rating
	}
	return 0
}

type QueueInfoResponse struct {
	SecondsEstimated     uint32   `protobuf:"varint,1,opt,name=seconds_estimated,json=secondsEstimated,proto3" json:"seconds_estimated,omitempty"`
	UserCount            uint32   `protobuf:"varint,2,opt,name=user_count,json=userCount,proto3" json:"user_count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *QueueInfoResponse) Reset()         { *m = QueueInfoResponse{} }
func (m *QueueInfoResponse) String() string { return proto.CompactTextString(m) }
func (*QueueInfoResponse) ProtoMessage()    {}
func (*QueueInfoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_96e4d7d76a734cd8, []int{9}
}

func (m *QueueInfoResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueueInfoResponse.Unmarshal(m, b)
}
func (m *QueueInfoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueueInfoResponse.Marshal(b, m, deterministic)
}
func (m *QueueInfoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueueInfoResponse.Merge(m, src)
}
func (m *QueueInfoResponse) XXX_Size() int {
	return xxx_messageInfo_QueueInfoResponse.Size(m)
}
func (m *QueueInfoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_QueueInfoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_QueueInfoResponse proto.InternalMessageInfo

func (m *QueueInfoResponse) GetSecondsEstimated() uint32 {
	if m != nil {
		return m.SecondsEstimated
	}
	return 0
}

func (m *QueueInfoResponse) GetUserCount() uint32 {
	if m != nil {
		return m.UserCount
	}
	return 0
}

func init() {
	proto.RegisterEnum("pb.QueueType", QueueType_name, QueueType_value)
	proto.RegisterType((*JoinQueueRequest)(nil), "pb.JoinQueueRequest")
	proto.RegisterType((*JoinQueueResponse)(nil), "pb.JoinQueueResponse")
	proto.RegisterType((*LeaveQueueRequest)(nil), "pb.LeaveQueueRequest")
	proto.RegisterType((*LeaveQueueResponse)(nil), "pb.LeaveQueueResponse")
	proto.RegisterType((*AcceptQueueRequest)(nil), "pb.AcceptQueueRequest")
	proto.RegisterType((*AcceptQueueResponse)(nil), "pb.AcceptQueueResponse")
	proto.RegisterType((*DeclineQueueRequest)(nil), "pb.DeclineQueueRequest")
	proto.RegisterType((*DeclineQueueResponse)(nil), "pb.DeclineQueueResponse")
	proto.RegisterType((*QueueInfoRequest)(nil), "pb.QueueInfoRequest")
	proto.RegisterType((*QueueInfoResponse)(nil), "pb.QueueInfoResponse")
}

func init() { proto.RegisterFile("queue.proto", fileDescriptor_96e4d7d76a734cd8) }

var fileDescriptor_96e4d7d76a734cd8 = []byte{
	// 505 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x95, 0xcf, 0x6e, 0xd3, 0x4e,
	0x10, 0xc7, 0x7f, 0x9b, 0x26, 0x4e, 0x32, 0xad, 0xfb, 0x4b, 0xa6, 0xa1, 0x35, 0x11, 0x48, 0xc1,
	0x52, 0xa5, 0xa8, 0xa0, 0x08, 0xb5, 0x82, 0x0b, 0x5c, 0x22, 0xda, 0x43, 0x00, 0x45, 0xc2, 0x2a,
	0x17, 0x10, 0xb2, 0x1c, 0x7b, 0x0a, 0x96, 0xd2, 0x5d, 0x3b, 0x5e, 0x17, 0xf5, 0x85, 0xb8, 0xf0,
	0x00, 0xbc, 0x1e, 0xf2, 0xee, 0xa6, 0x49, 0x6d, 0x10, 0x97, 0xb4, 0x37, 0xcf, 0x67, 0xc7, 0xfb,
	0x9d, 0xbf, 0x36, 0x6c, 0xa7, 0x39, 0xe5, 0x34, 0x4a, 0x16, 0x42, 0x0a, 0xac, 0x25, 0x33, 0x37,
	0x85, 0xce, 0x5b, 0x11, 0xf3, 0x0f, 0x05, 0xf6, 0x28, 0xcd, 0x29, 0x93, 0x78, 0x00, 0xcd, 0x3c,
	0xa3, 0x85, 0x1f, 0x47, 0x0e, 0x1b, 0xb0, 0x61, 0xdd, 0xb3, 0x0a, 0x73, 0x12, 0xe1, 0x33, 0x00,
	0xf5, 0xbe, 0x2f, 0xaf, 0x13, 0x72, 0x6a, 0x03, 0x36, 0xdc, 0x3d, 0xb6, 0x47, 0xc9, 0x6c, 0xa4,
	0x5e, 0x3f, 0xbf, 0x4e, 0xc8, 0x6b, 0xa7, 0xcb, 0x47, 0xdc, 0x07, 0x6b, 0x11, 0xc8, 0x98, 0x7f,
	0x75, 0xb6, 0xf4, 0x2d, 0xda, 0x72, 0x7f, 0x31, 0xe8, 0xae, 0x69, 0x66, 0x89, 0xe0, 0x19, 0x6d,
	0x4a, 0xf4, 0x21, 0xb4, 0x2e, 0x03, 0x19, 0x7e, 0x2b, 0xee, 0xd1, 0xb2, 0x4d, 0x65, 0x4f, 0x22,
	0xec, 0x41, 0xe3, 0x42, 0xe4, 0x3c, 0x72, 0xea, 0x03, 0x36, 0x6c, 0x79, 0xda, 0xc0, 0x23, 0xe8,
	0x66, 0x14, 0x0a, 0x1e, 0x65, 0xbe, 0x14, 0x7e, 0x10, 0x86, 0x94, 0x48, 0xa7, 0x31, 0x60, 0x43,
	0xdb, 0xfb, 0xdf, 0x1c, 0x9c, 0x8b, 0xb1, 0xc2, 0xee, 0x27, 0xe8, 0xbe, 0xa7, 0xe0, 0x8a, 0xee,
	0xa0, 0x5a, 0xee, 0x67, 0xc0, 0xf5, 0xbb, 0x37, 0x5a, 0x15, 0xf7, 0x0a, 0x50, 0xa7, 0x70, 0x17,
	0x7d, 0xfe, 0x7b, 0xc9, 0xdd, 0x9f, 0x0c, 0xf6, 0x6e, 0x09, 0x9b, 0xb4, 0x0e, 0x61, 0x57, 0x0a,
	0x19, 0xcc, 0x4d, 0xbd, 0x49, 0x07, 0x60, 0x7b, 0xb6, 0xa2, 0x63, 0x03, 0xf1, 0x09, 0xec, 0x68,
	0x37, 0x4e, 0x14, 0x51, 0xa4, 0x22, 0xb1, 0xbd, 0x6d, 0xc5, 0xa6, 0x0a, 0x95, 0x42, 0xdd, 0xfa,
	0x47, 0xa8, 0x8f, 0xa0, 0x1d, 0x06, 0x3c, 0xa4, 0xf9, 0x9c, 0x96, 0x63, 0xb0, 0x02, 0xee, 0x77,
	0xd8, 0x3b, 0xa5, 0x70, 0x1e, 0x73, 0xba, 0xe7, 0x32, 0x7d, 0x81, 0xde, 0x6d, 0xe1, 0xcd, 0x76,
	0x3f, 0x85, 0x8e, 0xe2, 0x13, 0x7e, 0x21, 0xee, 0x69, 0xc7, 0x7d, 0xe8, 0xae, 0x49, 0x9a, 0x74,
	0x9e, 0xae, 0x56, 0x8d, 0x32, 0x19, 0x5f, 0x06, 0xab, 0xc6, 0x77, 0xcc, 0xc1, 0xd9, 0x92, 0xe3,
	0x63, 0x00, 0x15, 0x60, 0x28, 0x72, 0x2e, 0x4d, 0xe7, 0xdb, 0x05, 0x79, 0x53, 0x80, 0xa3, 0x43,
	0x68, 0xdf, 0x04, 0x84, 0x3b, 0xd0, 0xfa, 0x38, 0xf5, 0xc6, 0xd3, 0x77, 0x67, 0xa7, 0x9d, 0xff,
	0x10, 0xc0, 0x32, 0xcf, 0xec, 0xf8, 0x47, 0x0d, 0x1a, 0xca, 0x0f, 0x5f, 0x40, 0xbd, 0xf8, 0xe8,
	0x60, 0xaf, 0xc8, 0xa5, 0xfc, 0xc9, 0xeb, 0x3f, 0x28, 0x51, 0x1d, 0xf1, 0x73, 0x86, 0x2f, 0xa1,
	0xa1, 0xd6, 0x12, 0x95, 0x47, 0x65, 0xfb, 0xfb, 0xfb, 0x65, 0x6c, 0x72, 0x7d, 0x05, 0x96, 0x1e,
	0x63, 0x54, 0x1e, 0xd5, 0xed, 0xeb, 0x1f, 0x54, 0xf8, 0x8d, 0xe8, 0x6b, 0x68, 0x9a, 0x79, 0x40,
	0xe5, 0xf5, 0x87, 0xa9, 0xec, 0x3b, 0xd5, 0x03, 0x23, 0x7d, 0x02, 0xf5, 0xa2, 0xec, 0x3a, 0xd3,
	0x72, 0xe3, 0x75, 0xa6, 0x95, 0xde, 0xcc, 0x2c, 0xf5, 0x4b, 0x38, 0xf9, 0x1d, 0x00, 0x00, 0xff,
	0xff, 0x9b, 0x1c, 0x0d, 0xdd, 0x21, 0x06, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// QueueClient is the client API for Queue service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type QueueClient interface {
	Join(ctx context.Context, in *JoinQueueRequest, opts ...grpc.CallOption) (Queue_JoinClient, error)
	Leave(ctx context.Context, in *LeaveQueueRequest, opts ...grpc.CallOption) (*LeaveQueueResponse, error)
	Accept(ctx context.Context, in *AcceptQueueRequest, opts ...grpc.CallOption) (Queue_AcceptClient, error)
	Decline(ctx context.Context, in *DeclineQueueRequest, opts ...grpc.CallOption) (*DeclineQueueResponse, error)
	Info(ctx context.Context, in *QueueInfoRequest, opts ...grpc.CallOption) (*QueueInfoResponse, error)
}

type queueClient struct {
	cc *grpc.ClientConn
}

func NewQueueClient(cc *grpc.ClientConn) QueueClient {
	return &queueClient{cc}
}

func (c *queueClient) Join(ctx context.Context, in *JoinQueueRequest, opts ...grpc.CallOption) (Queue_JoinClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Queue_serviceDesc.Streams[0], "/pb.Queue/Join", opts...)
	if err != nil {
		return nil, err
	}
	x := &queueJoinClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Queue_JoinClient interface {
	Recv() (*JoinQueueResponse, error)
	grpc.ClientStream
}

type queueJoinClient struct {
	grpc.ClientStream
}

func (x *queueJoinClient) Recv() (*JoinQueueResponse, error) {
	m := new(JoinQueueResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *queueClient) Leave(ctx context.Context, in *LeaveQueueRequest, opts ...grpc.CallOption) (*LeaveQueueResponse, error) {
	out := new(LeaveQueueResponse)
	err := c.cc.Invoke(ctx, "/pb.Queue/Leave", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queueClient) Accept(ctx context.Context, in *AcceptQueueRequest, opts ...grpc.CallOption) (Queue_AcceptClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Queue_serviceDesc.Streams[1], "/pb.Queue/Accept", opts...)
	if err != nil {
		return nil, err
	}
	x := &queueAcceptClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Queue_AcceptClient interface {
	Recv() (*AcceptQueueResponse, error)
	grpc.ClientStream
}

type queueAcceptClient struct {
	grpc.ClientStream
}

func (x *queueAcceptClient) Recv() (*AcceptQueueResponse, error) {
	m := new(AcceptQueueResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *queueClient) Decline(ctx context.Context, in *DeclineQueueRequest, opts ...grpc.CallOption) (*DeclineQueueResponse, error) {
	out := new(DeclineQueueResponse)
	err := c.cc.Invoke(ctx, "/pb.Queue/Decline", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queueClient) Info(ctx context.Context, in *QueueInfoRequest, opts ...grpc.CallOption) (*QueueInfoResponse, error) {
	out := new(QueueInfoResponse)
	err := c.cc.Invoke(ctx, "/pb.Queue/Info", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// QueueServer is the server API for Queue service.
type QueueServer interface {
	Join(*JoinQueueRequest, Queue_JoinServer) error
	Leave(context.Context, *LeaveQueueRequest) (*LeaveQueueResponse, error)
	Accept(*AcceptQueueRequest, Queue_AcceptServer) error
	Decline(context.Context, *DeclineQueueRequest) (*DeclineQueueResponse, error)
	Info(context.Context, *QueueInfoRequest) (*QueueInfoResponse, error)
}

// UnimplementedQueueServer can be embedded to have forward compatible implementations.
type UnimplementedQueueServer struct {
}

func (*UnimplementedQueueServer) Join(req *JoinQueueRequest, srv Queue_JoinServer) error {
	return status.Errorf(codes.Unimplemented, "method Join not implemented")
}
func (*UnimplementedQueueServer) Leave(ctx context.Context, req *LeaveQueueRequest) (*LeaveQueueResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Leave not implemented")
}
func (*UnimplementedQueueServer) Accept(req *AcceptQueueRequest, srv Queue_AcceptServer) error {
	return status.Errorf(codes.Unimplemented, "method Accept not implemented")
}
func (*UnimplementedQueueServer) Decline(ctx context.Context, req *DeclineQueueRequest) (*DeclineQueueResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Decline not implemented")
}
func (*UnimplementedQueueServer) Info(ctx context.Context, req *QueueInfoRequest) (*QueueInfoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Info not implemented")
}

func RegisterQueueServer(s *grpc.Server, srv QueueServer) {
	s.RegisterService(&_Queue_serviceDesc, srv)
}

func _Queue_Join_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(JoinQueueRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(QueueServer).Join(m, &queueJoinServer{stream})
}

type Queue_JoinServer interface {
	Send(*JoinQueueResponse) error
	grpc.ServerStream
}

type queueJoinServer struct {
	grpc.ServerStream
}

func (x *queueJoinServer) Send(m *JoinQueueResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _Queue_Leave_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LeaveQueueRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueueServer).Leave(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Queue/Leave",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueueServer).Leave(ctx, req.(*LeaveQueueRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Queue_Accept_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(AcceptQueueRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(QueueServer).Accept(m, &queueAcceptServer{stream})
}

type Queue_AcceptServer interface {
	Send(*AcceptQueueResponse) error
	grpc.ServerStream
}

type queueAcceptServer struct {
	grpc.ServerStream
}

func (x *queueAcceptServer) Send(m *AcceptQueueResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _Queue_Decline_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeclineQueueRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueueServer).Decline(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Queue/Decline",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueueServer).Decline(ctx, req.(*DeclineQueueRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Queue_Info_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueueInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueueServer).Info(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Queue/Info",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueueServer).Info(ctx, req.(*QueueInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Queue_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.Queue",
	HandlerType: (*QueueServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Leave",
			Handler:    _Queue_Leave_Handler,
		},
		{
			MethodName: "Decline",
			Handler:    _Queue_Decline_Handler,
		},
		{
			MethodName: "Info",
			Handler:    _Queue_Info_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Join",
			Handler:       _Queue_Join_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "Accept",
			Handler:       _Queue_Accept_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "queue.proto",
}
