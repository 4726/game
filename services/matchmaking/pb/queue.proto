syntax = "proto3";
package pb;

service Queue {
    rpc Join(JoinQueueRequest) returns (stream JoinQueueResponse);
    rpc Leave(LeaveQueueRequest) returns (LeaveQueueResponse);
    rpc Accept(AcceptQueueRequest) returns (stream AcceptQueueResponse);
    rpc Decline(DeclineQueueRequest) returns (DeclineQueueResponse);
    rpc Info(QueueInfoRequest) returns (QueueInfoResponse);
}

message JoinQueueRequest {
    uint64 user_id = 1;
    QueueType queue_type = 2;
    uint64 rating = 3;
}

message JoinQueueResponse {
    uint64 user_id = 1;
    QueueType queue_type = 2;
    uint64 match_id = 3;
    bool found = 4;
    uint32 seconds_to_accept = 5;
}

message LeaveQueueRequest {
    uint64 user_id = 1; 
    QueueType queue_type = 2;
}

message LeaveQueueResponse {
    uint64 user_id = 1;
    QueueType queue_type = 2;
}

message AcceptQueueRequest {
    uint64 user_id = 1;
    QueueType queue_type = 2;
    uint64 match_id = 3;
}

message AcceptQueueResponse {
    uint32 total_accepted = 1;
    uint32 total_needed = 2;
    QueueType queue_type = 3;
    bool cancelled = 4;
}

message DeclineQueueRequest {
    uint64 user_id = 1;
    QueueType queue_type = 2;
    uint64 match_id = 3;
}

message DeclineQueueResponse {
    uint64 user_id = 1;
    QueueType queue_type = 2;
}

message QueueInfoRequest {
    uint64 user_id = 1;
    QueueType queue_type = 2;
    uint64 rating = 3;
}

message QueueInfoResponse {
    uint32 seconds_estimated = 1;
}

enum QueueType {
    UNRANKED = 0;
    RANKED = 1;
}